name: 'Netlify PR Preview Deploy'

on:
  pull_request:
    branches:
      - main # Triggers when a PR is opened against `main`
    types: [opened, synchronize, reopened]

jobs:
  deploy:
    name: 'Deploy PR Preview to Netlify'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm install

      - name: Set NODE_ENV to Development
        run: echo "NODE_ENV=development" >> $GITHUB_ENV

      - name: Build for Preview
        run: npm run build # This will now use NODE_ENV=development

      - name: Deploy to Netlify Preview
        id: deploy
        uses: South-Paw/action-netlify-cli@v2
        with:
          args: deploy --dir=dist --alias=pr-${{ github.event.pull_request.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NODE_ENV: development

      - name: Fetch Latest Deployment URL
        run: |
          echo "Fetching latest deployment URL from Netlify"
          DEPLOY_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.NETLIFY_AUTH_TOKEN }}" \
            "https://api.netlify.com/api/v1/sites/${{ secrets.NETLIFY_SITE_ID }}/deploys" | jq -r '.[0].url')

          echo "The latest deployment URL is: $DEPLOY_URL"
          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV

      - name: Comment on PR with Preview URL
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deployUrl = process.env.DEPLOY_URL;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview URL: ${deployUrl}`
            })
